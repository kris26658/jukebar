<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spotify Player</title>
    <link rel="stylesheet" href="../styles/sp.css">
</head>

<body id="colorContent">
    <%- include("partials/header.ejs") %>

        <div id="content" class="contentBox">
            <h1>Spotify Player</h1>
            <div class="container">
                <div class="column">
                    <div id="search">
                        <p>Search for a song to play:</p>
                        <div class="search-container">
                            <input type="text" id="searchBar" placeholder="Search for a song">
                            <button type="submit" class="searchButton" id="searchButton">Search</button>

                        </div>
                    </div>
                    <div id="searchResults"></div>
                </div>
                <div class="column">
                    <div id="current">
                        <h3>Current Song: </h3>
                        <p>No currently playing songs.</p>
                    </div>
                    <div id="preview">
                    </div>
                </div>
                <div class="column">
                    <h3>Queue</h3>
                    <div id="queueList"></div>
                </div>
            </div>
        </div>

        <script>
            const current = document.getElementById("current");
            const searchResults = document.getElementById("searchResults");
            const searchBar = document.getElementById("searchBar");
            const previewDiv = document.getElementById("preview");

            // Add enter key support for search
            searchBar.addEventListener("keypress", function (event) {
                if (event.key === "Enter") {
                    event.preventDefault();
                    search();
                }
            });

            function search() {
                const query = document.getElementById('searchBar').value;
                if (!query) return alert("Please enter a song name.");

            function search() {
                const query = document.getElementById('searchBar').value;
                if (!query) return alert("Please enter a song name.");

                fetch(`/search?q=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.error === 'explicit') {
                            alert('Only explicit versions of this song were found. Try searching for a clean version.');
                            searchResults.innerHTML = '';
                        } else if (data.error) {
                            searchResults.innerHTML = `<p>Error: ${data.error}</p>`;
                        } else {
                            const trackId = data.uri.split(':')[2];
                            searchResults.innerHTML = `
                                <h3>${data.name}</h3>
                                <img src="${data.album.largestImage}" alt="${data.album.name}" style="max-width: 200px; margin: 10px 0;">
                                <p>Artist: ${data.artist}</p>
                                <button onclick="playSong('${data.uri}')" class='playback'>Play</button> <br>
                                <button onclick="addToQueue('${data.uri}')" class='playback'>Add to Queue</button> <br>
                                <button onclick="preview('${trackId}')" class='playback'>Preview</button>
                            `;
                        }
                    })
                    .catch(err => {
                        console.error('Search Error:', err);
                    });
            }

            function playSong(uri) {
                console.log("Attempting to play song with URI:", uri);


            function buttonClick(){
                console.log("Button clicked!");
            }

            function playSong(uri) {
                console.log("Attempting to play song with URI:", uri);

                fetch('/play', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ uri: uri })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error === 'explicit') {
                            alert('This song contains explicit content and cannot be played.');
                        } else if (data.success) {
                            alert("Playing song: " + data.trackInfo.name);
                        } else {
                            alert("Error: " + (data.error || "Unknown error"));
                        }
                    })
                    .catch(err => {
                        console.error('Fetch Error:', err);
                        alert("Failed to play song: " + (err.error || err.message || "Unknown error"));
                    });
            }

            function addToQueue(uri) {
                fetch('/addToQueue', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ uri: uri })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert("Added to queue: " + data.name);
                        } else {
                            alert("Error: " + (data.error || "Unknown error"));
                        }
                    })
                    .catch(err => {
                        console.error('Fetch Error:', err);
                        alert("Failed to add to queue: " + (err.error || err.message || "Unknown error"));
                    });
            }

            function preview(trackId) {
                previewDiv.innerHTML = `
                    <h3>Preview:</h3>
                    <iframe style="border-radius:12px"
                        src="https://open.spotify.com/embed/track/${trackId}?utm_source=generator&t=30"
                        width="100%" 
                        height="152" 
                        frameBorder="0" 
                        allowfullscreen=""
                        allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
                        loading="lazy">
                    </iframe>
                `;
            }

            document.addEventListener("DOMContentLoaded", function () {
                const searchButton = document.getElementById('searchButton');
                const searchBar = document.getElementById('searchBar');

                searchButton.addEventListener('click', search);
                searchBar.addEventListener('keypress', function (event) {
                    if (event.key === "Enter") {
                        event.preventDefault();
                        search();
                    }
                });

                let currentUri = null;

                function fetchCurrent() {
                    fetch('/currentSong')
                        .then(response => response.json())
                        .then(data => {
                            if (data.uri !== currentUri) {
                                currentUri = data.uri;
                                if (data.name) {
                                    current.innerHTML = `
                                <h3>Currently Playing: </h3>
                                <p>${data.name}</p>
                                <p>By ${data.artist}</p>
                                <img src="${data.cover}" alt="Album Cover" width="200">
                            `;
                                } else {
                                    current.innerHTML = "<p>No song currently playing</p>";
                                }
                            }
                        })
                        .catch(err => {
                            console.error('Error fetching current song:', err);
                            document.getElementById('currentSong').innerHTML = "An error occurred while fetching the current song.";
                        });
                }

                fetchCurrent();
                setInterval(fetchCurrent, 500);
            });
        </script>
</body>

</html>
